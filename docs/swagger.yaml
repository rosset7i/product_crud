definitions:
  product.CreateRequest:
    properties:
      name:
        type: string
      price:
        type: number
    type: object
  product.CreateResponse:
    properties:
      id:
        type: string
    type: object
  product.DeleteResponse:
    properties:
      id:
        type: string
    type: object
  product.FetchByIdResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      updated_at:
        type: string
    type: object
  product.FetchPagedProductsResponse:
    properties:
      products:
        items:
          $ref: '#/definitions/product.ProductResponse'
        type: array
    type: object
  product.ProductResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      updated_at:
        type: string
    type: object
  product.UpdateRequest:
    properties:
      id:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  product.UpdateResponse:
    properties:
      id:
        type: string
    type: object
  user.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  user.LoginResponse:
    properties:
      access_token:
        type: string
    type: object
  user.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  user.RegisterResponse:
    properties:
      id:
        type: string
    type: object
  web.errorResponse:
    properties:
      message:
        type: string
    type: object
info:
  contact: {}
  title: product_crud API
  version: "1.0"
paths:
  /v1/products:
    delete:
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product.DeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/web.errorResponse'
      security:
      - Bearer: []
      tags:
      - products
    get:
      consumes:
      - application/json
      parameters:
      - description: pageNumber
        in: query
        name: pageNumber
        required: true
        type: integer
      - description: pageSize
        in: query
        name: pageSize
        required: true
        type: integer
      - description: sort
        in: query
        name: sort
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product.FetchPagedProductsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/web.errorResponse'
      security:
      - Bearer: []
      tags:
      - products
    post:
      parameters:
      - description: payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/product.CreateRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/product.CreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/web.errorResponse'
      security:
      - Bearer: []
      tags:
      - products
    put:
      parameters:
      - description: payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/product.UpdateRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product.UpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/web.errorResponse'
      security:
      - Bearer: []
      tags:
      - products
  /v1/products/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product.FetchByIdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/web.errorResponse'
      security:
      - Bearer: []
      tags:
      - products
  /v1/users/login:
    post:
      parameters:
      - description: payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.LoginRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.errorResponse'
      tags:
      - Users
  /v1/users/register:
    post:
      parameters:
      - description: payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.RegisterRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.errorResponse'
      tags:
      - Users
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
